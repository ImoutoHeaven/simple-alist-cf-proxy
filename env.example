# ===== Required Environment Variables =====

# ADDRESS (required)
# AList server address
# Example: ADDRESS=https://alist.example.com
ADDRESS=https://your-alist-server.com

# TOKEN (required)
# HMAC-SHA256 signing key for signature verification
# This must match the TOKEN used in alist-landing-worker
# Example: TOKEN=your-super-secret-token-here
TOKEN=your-hmac-token-here

# WORKER_ADDRESS (required)
# Current worker's address (used for redirect loop detection)
# Example: WORKER_ADDRESS=https://download.workers.dev
WORKER_ADDRESS=https://your-worker.workers.dev

# ===== Optional Environment Variables =====

# VERIFY_HEADER (optional)
# Custom verification header name to send to AList
# Leave empty if not needed
VERIFY_HEADER=

# VERIFY_SECRET (optional)
# Custom verification header value to send to AList
# Leave empty if not needed
VERIFY_SECRET=

# SIGN_CHECK (default: true)
# Enable or disable ?sign= parameter verification
# Set to "false" to skip sign verification (NOT RECOMMENDED)
SIGN_CHECK=true

# HASH_CHECK (default: true)
# Enable or disable ?hashSign= parameter verification
# Set to "false" to skip hashSign verification
HASH_CHECK=true

# IP_CHECK (default: true)
# Enable or disable ipSign parameter verification
# Set to "false" to skip ipSign verification
IP_CHECK=true

# IPV4_ONLY (default: true)
# Block IPv6 access and only allow IPv4
# Set to "false" to allow both IPv4 and IPv6
IPV4_ONLY=true

# ===== Path Blacklist/Whitelist Configuration =====

# BLACKLIST_PREFIX (optional)
# Comma-separated list of path prefixes to blacklist
# Paths matching these prefixes will be subject to BLACKLIST_ACTION
# Example: BLACKLIST_PREFIX=/private,/admin,/internal
BLACKLIST_PREFIX=

# BLACKLIST_ACTION (optional)
# Action to take for blacklisted paths. Valid values:
#   - block: Return 403 Forbidden, deny all access
#   - skip-sign: Skip all signature checks (sign, hashSign, ipSign)
#   - skip-hash: Only check sign, skip hashSign and ipSign
#   - skip-ip: Check sign and hashSign, skip ipSign only
#   - asis: Respect the SIGN_CHECK, HASH_CHECK, IP_CHECK settings
# Example: BLACKLIST_ACTION=block
BLACKLIST_ACTION=

# WHITELIST_PREFIX (optional)
# Comma-separated list of path prefixes to whitelist
# Paths matching these prefixes will be subject to WHITELIST_ACTION
# Example: WHITELIST_PREFIX=/public,/shared,/downloads
WHITELIST_PREFIX=

# WHITELIST_ACTION (optional)
# Action to take for whitelisted paths. Valid values: (same as BLACKLIST_ACTION)
#   - block: Return 403 Forbidden
#   - skip-sign: Skip all signature checks
#   - skip-hash: Only check sign, skip hashSign and ipSign
#   - skip-ip: Check sign and hashSign, skip ipSign only
#   - asis: Respect the CHECK settings
# Example: WHITELIST_ACTION=skip-ip
WHITELIST_ACTION=

# ===== Database & Cache Configuration =====

# DB_MODE (optional)
# Enable database-backed cache/throttle/rate-limit. Valid: d1, d1-rest, custom-pg-rest
DB_MODE=

# CLEANUP_PERCENTAGE (optional, default: 1)
# Probability (0-100) that cleanup tasks run asynchronously.
CLEANUP_PERCENTAGE=1

# DOWNLOAD_CACHE_TABLE (optional)
# Override the cache table name when using a database backend.
DOWNLOAD_CACHE_TABLE=DOWNLOAD_CACHE_TABLE

# THROTTLE_PROTECTION_TABLE (optional)
# Override the throttle protection table name when using a database backend.
THROTTLE_PROTECTION_TABLE=THROTTLE_PROTECTION

# THROTTLE_PROTECT_HOSTNAME (optional)
# Comma-separated list of hostnames or suffixes that enable throttle protection.
THROTTLE_PROTECT_HOSTNAME=

# THROTTLE_TIME_WINDOW (optional, default: 60s)
# Protection duration after a hostname hits a protected HTTP status code.
THROTTLE_TIME_WINDOW=60s

# THROTTLE_PROTECT_HTTP_CODE (optional, default: 429,500,503)
# Comma-separated HTTP status codes that trigger throttle protection.
THROTTLE_PROTECT_HTTP_CODE=429,500,503

# DOWNLOAD_IP_RATELIMIT_TABLE (optional)
# Override the IP rate limit table name when using a database backend.
DOWNLOAD_IP_RATELIMIT_TABLE=DOWNLOAD_IP_RATELIMIT_TABLE

# ===== Rate Limit Configuration (optional) =====
# Leave blank to disable database-backed IP rate limiting.

# WINDOW_TIME
# Time window for IP subnet counting (e.g., 24h, 60m, 30s)
WINDOW_TIME=

# IPSUBNET_WINDOWTIME_LIMIT
# Maximum number of requests allowed per subnet within WINDOW_TIME.
IPSUBNET_WINDOWTIME_LIMIT=

# IPV4_SUFFIX / IPV6_SUFFIX
# CIDR suffix applied before hashing, defaults match /32 (IPv4) and /60 (IPv6).
IPV4_SUFFIX=/32
IPV6_SUFFIX=/60

# BLOCK_TIME (optional, default: 10m)
# Extend block duration once the limit is exceeded.
BLOCK_TIME=10m

# PG_ERROR_HANDLE (optional, default: fail-closed)
# Choose fail-open to skip database operations when connectivity fails.
PG_ERROR_HANDLE=fail-closed

# ===== Notes =====
#
# Signature Check Order: sign → hashSign → ipSign
# - Skipping earlier checks automatically skips later ones
#
# Priority: Blacklist > Whitelist > Default (CHECK flags)
# - When a path matches both blacklist and whitelist, blacklist takes precedence
#
# Activation Requirements:
# - Blacklist is ONLY active when BOTH BLACKLIST_PREFIX and BLACKLIST_ACTION are set
# - Whitelist is ONLY active when BOTH WHITELIST_PREFIX and WHITELIST_ACTION are set
